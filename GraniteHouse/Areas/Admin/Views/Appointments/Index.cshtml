@model GraniteHouse.Models.ViewModels.AppointmentViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="get">
    <br />
    <br />
    <h2 class="text-info">Appoinment List</h2>
    <br />
    <div style="height: 150px; background-color: aliceblue">

        <div class="col-12">
            <div class="row" style="padding-top: 10px;">
                <div class="col-2">
                    Customer Name
                </div>
                <div class="col-3">
                    @Html.Editor("searchName", new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-2"></div>
                <div class="col-2">
                    Email
                </div>
                <div class="col-3">
                    @Html.Editor("searchEmail", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="row" style="padding-top: 10px;">
                <div class="col-2">
                    Phone Number
                </div>
                <div class="col-3">
                    @Html.Editor("searchPhone", new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-2"></div>
                <div class="col-2">
                    Appointment Date
                </div>
                <div class="col-3">
                    @Html.Editor("searchDate", new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="row" style="padding-top: 10px;">
                <div class="col-2">

                </div>
                <div class="col-3"></div>
                <div class="col-2"></div>
                <div class="col-2"></div>
                <div class="col-3">
                    <button type="submit" name="submit" class="btn btn-primary" value="Search">
                        <i class="fas fa-searck"></i> Search
                    </button>
                </div>
            </div>
        </div>
    </div>
    <br />
    <br />
    <div>
        <table class="table table-striped border">
            <tr class="table-info">
                <th>@Html.DisplayNameFor(m => m.Appointments.FirstOrDefault().SalesPerson.Name)</th>
                <th>@Html.DisplayNameFor(m => m.Appointments.FirstOrDefault().AppointmentDate)</th>
                <th>@Html.DisplayNameFor(m => m.Appointments.FirstOrDefault().CustomerName)</th>
                <th>@Html.DisplayNameFor(m => m.Appointments.FirstOrDefault().CustomerPhoneNumber)</th>
                <th>@Html.DisplayNameFor(m => m.Appointments.FirstOrDefault().CustomerEmail)</th>
                <th>@Html.DisplayNameFor(m => m.Appointments.FirstOrDefault().IsConfirmed)</th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.Appointments)
            {
                <tr>
                    <td>@Html.DisplayFor(m => item.SalesPerson.Name)</td>
                    <td>@Html.DisplayFor(m => item.AppointmentDate)</td>
                    <td>@Html.DisplayFor(m => item.CustomerName)</td>
                    <td>@Html.DisplayFor(m => item.CustomerPhoneNumber)</td>
                    <td>@Html.DisplayFor(m => item.CustomerEmail)</td>
                    <td>@Html.DisplayFor(m => item.IsConfirmed)</td>
                    <td>
                        <partial name="_TableButtonPartial" model="@item.Id" />
                    </td>
                </tr>
            }
        </table>
    </div>
    
    <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true" page-class="btn border" 
         page-class-normal="btn btn-default active" page-class-selected="btn btn-primary active" class="btn-group m-1"></div>
</form>

@section Scripts{
    <script>
       
        $(function() {
            $("#datepicker").datepicker({
                minDate: +1,
                maxDate: "+3M"
            });


        });
    </script>
}